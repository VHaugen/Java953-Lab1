@startuml

title __SRC's Class Diagram__\n

  namespace  {
    abstract class CargoTransporter {
        - cargo : Cargo<T>
        + CargoTransporter()
        + getCargo()
        + load()
        + move()
        + unLoad()
        # isSafeToLoad()
        # unLoadPosition()
        - isInRange()
    }
  }
  

  namespace  {
    abstract class Motorized {
        + modelName : String
        # color : Color
        + brake()
        + gas()
        + getColor()
        + getCurrentSpeed()
        + getEnginePower()
        + getMotion()
        + getPos()
        + getPosX()
        + getPosY()
        + move()
        + setColor()
        + setPos()
        + startEngine()
        + stopEngine()
        + turnLeft()
        + turnRight()
        # acceptableValue()
        # decrementSpeed()
        # incrementSpeed()
        # speedFactor()
        ~ Motorized()
    }
  }
  

  namespace  {
    abstract class PersonCar {
        # nrDoors : int
        + getNrDoors()
        ~ PersonCar()
    }
  }
  

  namespace  {
    class RepairCenter {
        - carQue : Cargo<T>
        + RemoveCarFromQue()
        + RepairCenter()
        + addCarToQue()
        + getCarQue()
    }
  }
  

  namespace  {
    abstract class Transporter {
        + Transporter()
        + gas()
        + lowerRamp()
        + move()
        + raiseRamp()
        # getRamp()
    }
  }
  

  namespace  {
    abstract class Truck {
        ~ nrDoors : int
        + Truck()
    }
  }
  

  CargoTransporter -up-|> Transporter
  Motorized .up.|> IDriveable
  Motorized o-- E : engine
  Motorized o-- Motion : motion
  PersonCar .up.|> ITruckCargo
  PersonCar -up-|> Motorized
  Transporter .up.|> ITransporter
  Transporter -up-|> Motorized
  Transporter o-- Ramp : ramp
  Truck .up.|> IFerryCargo
  Truck -up-|> Transporter


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
