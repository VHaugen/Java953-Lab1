@startuml

title __GUI's Class Diagram__\n

  namespace s  {
    class CarController {
        + CarController()
        + init()
    }
  }
  

  namespace s  {
    class CarModel {
        ~ signalObserver : Collection<ISignalObserver>
        - cars : List<IDriveable>
        - delay : int
        - modelHeight : double
        - modelWith : double
        - trucks : List<ITransporter>
        - turboCars : List<ITurbo>
        + CarModel()
        + actionPerformed()
        + addObserver()
        + brake()
        + gas()
        + lowerRamp()
        + raiseRamp()
        + setTurboOff()
        + setTurboOn()
        + startEngines()
        + stopEngines()
        + update()
        - callObserverUpdate()
        - checkMaxCollision()
        - checkMinCollision()
        - checkMinMaxCollision()
        - setCarInBounds()
        - startStopSetNewPos()
        - stopTurnStartVehicle()
    }
  }
  

  namespace s  {
    class CarView {
        ~ brakeButton : JButton
        ~ controlPanel : JPanel
        ~ gasButton : JButton
        ~ gasLabel : JLabel
        ~ gasPanel : JPanel
        ~ gasSpinner : JSpinner
        ~ liftBedButton : JButton
        ~ lowerBedButton : JButton
        ~ startButton : JButton
        ~ stopButton : JButton
        ~ turboOffButton : JButton
        ~ turboOnButton : JButton
        - gasAmount : int
        - screenHeight : int
        - screenWidth : int
        + CarView()
        + actOnAction()
        + getGasAmount()
        + lowerRampAction()
        + raiseRampAction()
        + setBrakeAction()
        + setGasAction()
        + setTurboOffAction()
        + setTurboOnAction()
        + startEngineAction()
        + stopEngineAction()
        - initComponents()
    }
  }
  

  namespace s  {
    class DrawPanel {
        ~ pics : List<IPositionablePicture>
        + DrawPanel()
        # paintComponent()
    }
  }
  

  namespace s  {
    class Main {
        {static} - buttonOffset : int
        {static} - carHeight : int
        {static} - carWidth : int
        {static} - screenHeight : int
        {static} - screenWidth : int
        {static} - windowTitle : String
        {static} + main()
    }
  }
  

  namespace s  {
    class PositionablePicture {
        - carImage : BufferedImage
        + PositionablePicture()
        + getImage()
        + getPosition()
    }
  }
  

  CarController .up.|> IController
  CarController o-- ICarModel : model
  CarController o-- ISignalObserver : view
  CarModel .up.|> ICarModel
  CarModel .up.|> java.awt.event.ActionListener
  CarView .up.|> ISignalObserver
  CarView -up-|> javax.swing.JFrame
  CarView o-- DrawPanel : drawPanel
  DrawPanel -up-|> javax.swing.JPanel
  PositionablePicture .up.|> IPositionablePicture
  PositionablePicture o-- Position : position


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
